-- A√±ade categor√≠as por defecto para gesti√≥n de cr√©dito/deuda en hogares nuevos
-- ESTRUCTURA SOLAMENTE: funciones y trigger (sin tocar datos existentes)

SET ROLE cuentassik_dev_owner;

-- Funci√≥n de trigger: crea las categor√≠as si no existen ya
CREATE OR REPLACE FUNCTION public.create_default_household_categories()
RETURNS trigger
LANGUAGE plpgsql
AS $$
BEGIN
  -- Pr√©stamo Personal (expense)
  IF NOT EXISTS (
    SELECT 1 FROM categories c
    WHERE c.household_id = NEW.id
      AND c.name = 'Pr√©stamo Personal'
      AND (c.type = 'expense' OR c.type IS NULL)
  ) THEN
    INSERT INTO categories (household_id, name, icon, type, created_at)
    VALUES (NEW.id, 'Pr√©stamo Personal', 'üí∞', 'expense', NOW());
  END IF;

  -- Pago Pr√©stamo (income)
  IF NOT EXISTS (
    SELECT 1 FROM categories c
    WHERE c.household_id = NEW.id
      AND c.name = 'Pago Pr√©stamo'
      AND (c.type = 'income' OR c.type IS NULL)
  ) THEN
    INSERT INTO categories (household_id, name, icon, type, created_at)
    VALUES (NEW.id, 'Pago Pr√©stamo', 'üí≥', 'income', NOW());
  END IF;

  -- Reembolso Saldo a Favor (expense)
  IF NOT EXISTS (
    SELECT 1 FROM categories c
    WHERE c.household_id = NEW.id
      AND c.name = 'Reembolso Saldo a Favor'
      AND (c.type = 'expense' OR c.type IS NULL)
  ) THEN
    INSERT INTO categories (household_id, name, icon, type, created_at)
    VALUES (NEW.id, 'Reembolso Saldo a Favor', '‚Ü©Ô∏è', 'expense', NOW());
  END IF;

  RETURN NEW;
END;
$$;

-- Trigger que ejecuta la funci√≥n al crear un hogar
DROP TRIGGER IF EXISTS trigger_create_default_categories ON public.households;
CREATE TRIGGER trigger_create_default_categories
AFTER INSERT ON public.households
FOR EACH ROW
EXECUTE FUNCTION public.create_default_household_categories();

RESET ROLE;
