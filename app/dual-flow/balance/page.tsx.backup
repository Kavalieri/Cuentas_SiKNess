import { Suspense } from 'react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import {
  Scale,
  ArrowUpDown,
  Wallet,
  CreditCard,
  CheckCircle,
  Clock,
  Plus,
  Eye,
  AlertTriangle
} from 'lucide-react';
import { getCurrentUser, getUserHouseholdId } from '@/lib/supabaseServer';
import { redirect } from 'next/navigation';
import { formatCurrency } from '@/lib/format';

export default async function BalancePage() {
  const currentUser = await getCurrentUser();
  if (!currentUser) {
    redirect('/login');
  }

  const householdId = await getUserHouseholdId();
  if (!householdId) {
    redirect('/app/onboarding');
  }

  return (
    <div className="flex-1 space-y-4 p-4 pt-6">
      <div className="space-y-2">
        <h1 className="text-2xl font-bold tracking-tight">Balance Unificado</h1>
        <p className="text-muted-foreground">
          Sistema dual-flow: gastos del fondo común + gastos personales con emparejamiento automático
        </p>
      </div>

      <Suspense fallback={<div>Cargando balance dual-flow...</div>}>
        <BalanceContent householdId={householdId} />
      </Suspense>

      <div className="h-20"></div>
    </div>
  );
}

async function BalanceContent({ householdId }: { householdId: string }) {
  const mockData = {
    balanceGeneral: {
      fondoComun: 1200.50,
      gastosPersonalesPendientes: 340.75,
      creditosPendientes: 89.25,
      neto: 770.50
    },
    flujos: {
      personalToCommon: 118.15,
      commonToPersonal: 32.75,
      neto: 85.40
    }
  };

  return (
    <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
      <Card className="md:col-span-2">
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Balance General</CardTitle>
          <Scale className="h-4 w-4 text-muted-foreground" />
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 gap-4">
            <div className="space-y-2">
              <div className="text-xs text-muted-foreground">Fondo Común</div>
              <div className="text-lg font-bold text-green-600">
                {formatCurrency(mockData.balanceGeneral.fondoComun)}
              </div>
            </div>
            <div className="space-y-2">
              <div className="text-xs text-muted-foreground">Gastos Pendientes</div>
              <div className="text-lg font-bold text-orange-600">
                {formatCurrency(mockData.balanceGeneral.gastosPersonalesPendientes)}
              </div>
            </div>
            <div className="space-y-2">
              <div className="text-xs text-muted-foreground">Créditos</div>
              <div className="text-lg font-bold text-blue-600">
                {formatCurrency(mockData.balanceGeneral.creditosPendientes)}
              </div>
            </div>
            <div className="space-y-2">
              <div className="text-xs text-muted-foreground">Balance Neto</div>
              <div className="text-xl font-bold">
                {formatCurrency(mockData.balanceGeneral.neto)}
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Personal → Común</CardTitle>
          <Wallet className="h-4 w-4 text-orange-500" />
        </CardHeader>
        <CardContent>
          <div className="space-y-2">
            <div className="text-2xl font-bold text-orange-600">
              {formatCurrency(mockData.flujos.personalToCommon)}
            </div>
            <p className="text-xs text-muted-foreground">
              Gastos out-of-pocket pendientes
            </p>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Común → Personal</CardTitle>
          <CreditCard className="h-4 w-4 text-blue-500" />
        </CardHeader>
        <CardContent>
          <div className="space-y-2">
            <div className="text-2xl font-bold text-blue-600">
              {formatCurrency(mockData.flujos.commonToPersonal)}
            </div>
            <p className="text-xs text-muted-foreground">
              Reembolsos del fondo común
            </p>
          </div>
        </CardContent>
      </Card>

      <Card className="md:col-span-2 lg:col-span-4 border-dashed border-primary/50">
        <CardContent className="pt-6">
          <div className="text-center space-y-2">
            <div className="text-sm font-medium">�� Sistema Dual-Flow Activo</div>
            <p className="text-xs text-muted-foreground">
              Balance unificado con emparejamiento automático de transacciones
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
